From Joel Grus' book Data Science From Scratch: First Principles With Python

# ADDING TWO VECTORS

def addVector(vector1, vector2):
    index = 0
    sumOfVectors = [0] * len(vector1)
    for vector1_i, vector2_i in zip(vector1, vector2):
        sumOfVectors[index] = vector1_i + vector2_i
        index = index + 1
    return sumOfVectors

# SUBTRACTING TWO VECTORS

def subtractVector(vector1, vector2):
    index = 0
    sumOfVectors = [0] * len(vector1)
    for vector1_i, vector2_i in zip(vector1, vector2):
        sumOfVectors[index] = vector1_i - vector2_i
        index = index + 1
    return sumOfVectors

# FINDING THE LENGTH OF A VECTOR

def sumVector(vector):
    cumSum = 0
    for index in range(len(vector)):
        cumSum = vector[index] + cumSum
    return cumSum
    
# SCALAR MULTIPLICATION OF A VECTOR

def scalarMultiplication(vector, scalar):
    index = 0
    productOfVectors = [0] * len(vector)
    for index in range(len(vector)):
        productOfVectors[index] = vector[index] * scalar
    return productOfVectors
    
# FINDING THE MEAN OF A VECTOR

def meanOfVector(vector):
    numDimensions = len(vector)
    cumSum = float(sumVector(vector))
    mean = (cumSum / numDimensions)
    return mean

# FIND THE DOT PRODUCT OF TWO VECTORS

def dotProduct (vector1, vector2):
    cumSum = 0    
    for vector1_i, vector2_i in zip(vector1, vector2):
        cumSum = cumSum + vector1_i * vector2_i
    return cumSum

# FIND THE SUM OF SQUARES OF A VECTOR

    def sumOfSquares (vector):
    sumOfSquares = dotProduct(vector, vector)
    return sumOfSquares
    
# FIND THE MAGNITUDE OF A VECTOR
def magnitude(vector):
    import math
    value = sumOfSquares(vector)
    return math.sqrt(value)    

# FIND THE DISTANCE BETWEEN TWO VECTORS
def distanceBetween(vector1, vector2):
    import math
    return magnitude(subtractVector(vector1, vector2))


# CREATE A MATRIX OF N X Y dimensions with 0s

def zeroesMatrix(numRows, numCols):
    row = [0] * numRows
    matrix = np.array([row] * numCols)
    return matrix
